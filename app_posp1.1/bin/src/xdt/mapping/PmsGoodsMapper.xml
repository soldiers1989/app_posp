<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xdt.mapping.PmsGoodsMapper">
	<resultMap id="BaseResultMap" type="xdt.model.PmsGoods">
		<id column="GOODS_ID" property="goodsId" jdbcType="VARCHAR" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="GOODS_IMAGE_URL" property="goodsImageUrl"
			jdbcType="VARCHAR" />
		<result column="GOODS_PRICE" property="goodsPrice" jdbcType="VARCHAR" />
		<result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
		<result column="CREATE_PEOPLE" property="createPeople"
			jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="UPDATE_PEOPLE" property="updatePeople"
			jdbcType="VARCHAR" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		GOODS_ID, GOODS_NAME, GOODS_IMAGE_URL, GOODS_PRICE, DESCRIPTION, CREATE_PEOPLE,
		CREATE_TIME,
		UPDATE_PEOPLE, UPDATE_TIME
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from PMS_GOODS
		where GOODS_ID = #{goodsId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from PMS_GOODS
		where GOODS_ID = #{goodsId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="xdt.model.PmsGoods">
		insert into PMS_GOODS (GOODS_ID, GOODS_NAME, GOODS_IMAGE_URL,
		GOODS_PRICE, DESCRIPTION, CREATE_PEOPLE,
		CREATE_TIME, UPDATE_PEOPLE, UPDATE_TIME
		)
		values (#{goodsId,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR},
		#{goodsImageUrl,jdbcType=VARCHAR},
		#{goodsPrice,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{createPeople,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{updatePeople,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="xdt.model.PmsGoods">
		insert into PMS_GOODS
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="goodsId != null">
				GOODS_ID,
			</if>
			<if test="goodsName != null">
				GOODS_NAME,
			</if>
			<if test="goodsImageUrl != null">
				GOODS_IMAGE_URL,
			</if>
			<if test="goodsPrice != null">
				GOODS_PRICE,
			</if>
			<if test="description != null">
				DESCRIPTION,
			</if>
			<if test="createPeople != null">
				CREATE_PEOPLE,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="updatePeople != null">
				UPDATE_PEOPLE,
			</if>
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="goodsId != null">
				#{goodsId,jdbcType=VARCHAR},
			</if>
			<if test="goodsName != null">
				#{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="goodsImageUrl != null">
				#{goodsImageUrl,jdbcType=VARCHAR},
			</if>
			<if test="goodsPrice != null">
				#{goodsPrice,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="createPeople != null">
				#{createPeople,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatePeople != null">
				#{updatePeople,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="xdt.model.PmsGoods">
		update PMS_GOODS
		<set>
			<if test="goodsName != null">
				GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="goodsImageUrl != null">
				GOODS_IMAGE_URL = #{goodsImageUrl,jdbcType=VARCHAR},
			</if>
			<if test="goodsPrice != null">
				GOODS_PRICE = #{goodsPrice,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				DESCRIPTION = #{description,jdbcType=VARCHAR},
			</if>
			<if test="createPeople != null">
				CREATE_PEOPLE = #{createPeople,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatePeople != null">
				UPDATE_PEOPLE = #{updatePeople,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where GOODS_ID = #{goodsId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="xdt.model.PmsGoods">
		update PMS_GOODS
		set GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
		GOODS_IMAGE_URL = #{goodsImageUrl,jdbcType=VARCHAR},
		GOODS_PRICE = #{goodsPrice,jdbcType=VARCHAR},
		DESCRIPTION = #{description,jdbcType=VARCHAR},
		CREATE_PEOPLE = #{createPeople,jdbcType=VARCHAR},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		UPDATE_PEOPLE = #{updatePeople,jdbcType=VARCHAR},
		UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
		where GOODS_ID = #{goodsId,jdbcType=VARCHAR}
	</update>
	<!-- 根据商品实体查询记录 -->
	<select id="selectList" parameterType="xdt.model.PmsGoods"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from PMS_GOODS
		<where>
			<if test="goodsId!=null and goodsId!=''"> and GOODS_ID = #{goodsId,jdbcType=VARCHAR}</if>
			<if test="goodsName!=null and goodsName!=''"> and GOODS_NAME = #{goodsName,jdbcType=VARCHAR}</if>
		</where>
	</select>
	<!-- 根据商品实体查询记录 -->
	<select id="getGoodsPriceSum" parameterType="java.util.HashMap"
		resultType="java.lang.Integer">

		select sum(price) from
		(

		<foreach collection="goodsRequestList" item="goodsRequest"
			index="index" separator=" union all">
			select to_number(t.goods_price) * #{goodsRequest.goodsNum,jdbcType=INTEGER}
			as price from pms_goods t
			where t.goods_id = #{goodsRequest.goodsId,jdbcType=VARCHAR}
		</foreach>
		)

	</select>


	<!-- 根据商品id查询商品列表 -->
	<select id="getGoodsByIds" parameterType="java.util.HashMap"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from PMS_GOODS
		<where>
			goods_id in
			<foreach collection="goodsIds" item="goodsId" index="index"
				separator="," open="(" close=")">
				#{goodsId,jdbcType=VARCHAR}
			</foreach>
		</where>
	</select>



</mapper>